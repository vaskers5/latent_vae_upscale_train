# general settings
# CUDA_VISIBLE_DEVICES=0,1,2,3 python -m torch.distributed.launch --nproc_per_node=4 --master_port=4321 basicsr/train.py -opt options/train/SwinIR/train_SwinIR_latent_sr_kaggle.yml --launcher pytorch
name: swinirdefauilt_256_512_new_val_test
model_type: SwinIRLatentModel
scale: 2
num_gpu: 4
manual_seed: 0

vae_sources:
  sdxl_vae:
    hf_repo: stabilityai/sdxl-vae
    vae_kind: kl

# dataset and data loader settings
datasets:
  train:
    name: MidjourneyCropsFluxVAE_stage2_train
    type: LatentCacheDataset
    high_res: 512
    low_res: 256
    cache_dirs:

      - /data/kazanplova/latent_vae_upscale_train/midjourney_full_dataset_crops_new/embeddings/sdxl_vae
      - /data/kazanplova/datasets/openim_cropped/train_latents/sdxl_vae
    vae_names: [sdxl_vae]
    phase: train
    filename_tmpl: "{}"
    io_backend:
      type: disk
    scale: 2
    mean: null
    std: null
    # data loader
    num_worker_per_gpu: 24
    batch_size_per_gpu: 64
    prefetch_mode: cuda
    pin_memory: true

  val:
    name: sdxk_120_1024x1024
    type: LatentCacheDataset
    high_res: 1024
    low_res: 512
    cache_dirs:
      - /data/kazanplova/datasets/latent_upscale_validation_120_samples/embeddings/sdxl_vae
    vae_names: [sdxl_vae]
    phase: val
    io_backend:
      type: disk
    scale: 2
    mean: null
    std: null
    batch_size_per_gpu: 16
    num_worker_per_gpu: 4
    pin_memory: true

# network structures
network_g:
  type: SwinIR
  upscale: 2
  in_chans: 4 # 16 channels for latent representations
  img_size: 16 # Input latent size (16x16)
  window_size: 8
  img_range: 1.
  depths: [6, 6, 6, 6, 6, 6]
  embed_dim: 180
  num_heads: [6, 6, 6, 6, 6, 6]
  mlp_ratio: 2
  upsampler: "pixelshuffle"
  resi_connection: "1conv"

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: 0.0001
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [150000, 225000, 275000]
    gamma: 0.5

  total_steps: 16000
  warmup_iter: -1

  l1_latent_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
    space: latent

  fft_frequency_opt:
    type: FFTFrequencyLoss
    loss_weight: 0.5
    reduction: mean
    space: latent
    norm: ortho
  use_log_amplitude: false
  alpha: 0.0
  normalize_weight: true
  eps: 1e-8

# path settings
path:
  strict_load_g: true
  param_key_g: params
  pretrain_network_g: null
  resume_state: null
  experiments_root: ./experiments/swinir_stage2_fft_pixel_latent_mix_3m_256_512

# validation settings
val:
  val_freq: 10
  save_img: true
  pbar: true
  cache_decoded: true
  cache_pred_decoded: false
  cache_dir_name: cache_folder
  cache_format: pt
  metrics:
    l1_latent:
      type: L1Loss
      space: latent
    l2_latent:
      type: MSELoss
      space: latent
    pixel_psnr_pt:
      type: calculate_psnr_pt
      space: pixel
      crop_border: 2
      test_y_channel: false
    pixel_ssim_pt:
      type: calculate_ssim_pt
      space: pixel
      crop_border: 2
      test_y_channel: false

# logging settings
logger:
  print_freq: 5
  save_checkpoint_freq: 2000 #!!float 5e3
  use_tb_logger: true
  wandb:
    project: SwinIR-Latent-SR
    entity: kazanplova-it-more
    resume_id: null
    # Maximum number of validation images to log to wandb per validation run
    # This prevents cluttering your wandb dashboard with too many images
    max_val_images: 10

# dist training settings
dist_params:
  backend: nccl
  port: 29500
  dist: true

resume_state: null
